[flake8]
per-file-ignores =
    */__init__.py: D104, F401
    tests/*: D
    docs/*: D,B,A
    src/moscot/_docs.py: D
    src/moscot/backends/ott/_solver.py: D101, D102
    src/moscot/problems/_subset_policy.py: D101, D102, D105, D106, D107, A002, A003
    src/moscot/solvers/_output.py: D101, D102, D105, D106, D107, A002, A003
    src/moscot/problems/_compound_problem.py: D101, D102, D105, D106, D107, A002, A003
    tests/data/*: D,B,E
    src/moscot/costs/_costs.py: D
    src/moscot/problems/_compound_problem.py: RST, D
    src/moscot/solvers/_tagged_array.py: D
    src/moscot/backends/ott/_output.py: D
    src/moscot/_constants/_constants.py: D
    src/moscot/_constants/_key.py: D
    src/moscot/problems/base/_base_problem.py: D
    src/moscot/problems/base/_problem_manager.py: D
    src/moscot/_constants/_enum.py: D
    src/moscot/_docs/*.py: D
# D104: Missing docstring in public package
# F401: <package> imported but unused
max_line_length = 120
filename = *.py
# D202 No blank lines allowed after function docstring
# D107 Missing docstring in __init__
# B008 Do not perform function calls in argument defaults
# W503 line break before binary operator
# D105 Missing docstring in magic method
# E203 whitespace before ':'
# F405 ... may be undefined, or defined from star imports: ...
# RST306 Unknown target name
# D106 Missing docstring in public nested class
ignore = D202,D107,B008,W503,D105,E203,F405,RST306,RST304,E741
exclude =
    .git
    __pycache__
    .tox
    build
    dist
    setup.py
ban-relative-imports = true

[doc8]
max-line-length = 120
ignore-path = .tox,build,dist
quiet = 1

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos

[tox]
isolated_build = True
envlist =
    lint
    py{37,38,39}-{linux,macos}
skip_missing_interpreters = true

[coverage:run]
branch = true
#TODO(michalk8): enable once using pytest-xdist
parallel = false
source = moscot
omit = */__init__.py

[coverage:paths]
source =
    moscot
    */site-packages/moscot

[coverage:report]
exclude_lines =
    \#.*pragma:\s*no.?cover

    ^if __name__ == .__main__.:$

    ^\s*raise AssertionError\b
    ^\s*raise NotImplementedError\b
    ^\s*return NotImplemented\b
show_missing = true
precision = 2
skip_empty = True
sort = Miss

[pytest]
addopts = --strict-markers
python_files = test_*.py
testpaths = tests/
xfail_strict = true

[testenv]
platform =
    linux: linux
    macos: (osx|darwin)
# TODO(michalk8): Cython+POT not necessary, just convenient for fixtures
deps =
    pytest
    pytest-mock
    pytest-cov
usedevelop = true
passenv = TOXENV CI CODECOV_* GITHUB_ACTIONS PYTEST_FLAGS
commands =
    python -m pytest --cov --cov-append --cov-report=term-missing --cov-config={toxinidir}/tox.ini {posargs:-vv} {env:PYTEST_FLAGS:}

[testenv:lint]
description = Perform linting.
basepython = python3.9
deps = pre-commit>=2.14.0
skip_install = true
commands = pre-commit run --all-files --show-diff-on-failure {posargs:}

[testenv:clean-docs]
description = Clean the documentation artifacts.
basepython = python3.8
deps =
skip_install = true
changedir = {toxinidir}/docs
whitelist_externals = make
commands = make clean

[testenv:docs]
description = Build the documentation.
basepython = python3.9
skip_install = false
extras = docs
whitelist_externals = sphinx-build
commands =
    sphinx-build --color -b html {toxinidir}/docs/source {toxinidir}/docs/build/html
    python -c 'import pathlib; print(f"Documentation is available under:", pathlib.Path(f"{toxinidir}") / "docs" / "build" / "html" / "index.html")'
